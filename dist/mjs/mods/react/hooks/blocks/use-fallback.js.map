{"version":3,"file":"use-fallback.js","sources":["../../../../../../src/mods/react/hooks/blocks/use-fallback.ts"],"sourcesContent":["import { Query } from \"mods/react/types/query.js\"\nimport { State } from \"mods/types/state.js\"\n\n/**\n * Fallback to given data/error if there is no data/error\n * @example You got some data/error using SSR/ISR and want to display it on first render\n * @example You still want to display something even if the fetcher returned nothing\n * @param query \n * @param state \n */\nexport function useFallback<D = any, E = any, K = any>(\n  query: Query<D, E, K>,\n  state?: State<D, E, K>\n) {\n  const { data, error } = query\n\n  if (data !== undefined) return\n  if (error !== undefined) return\n  Object.assign(query, state)\n}"],"names":[],"mappings":"AAGA;;;;;;AAMG;AACa,SAAA,WAAW,CACzB,KAAqB,EACrB,KAAsB,EAAA;IAEd,IAAA,IAAI,GAAY,KAAK,CAAA,IAAjB,EAAE,KAAK,GAAK,KAAK,CAAA,KAAV,CAAU;IAE7B,IAAI,IAAI,KAAK,SAAS;QAAE,OAAM;IAC9B,IAAI,KAAK,KAAK,SAAS;QAAE,OAAM;AAC/B,IAAA,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;AAC7B;;;;"}