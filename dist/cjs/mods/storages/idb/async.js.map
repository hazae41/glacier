{"version":3,"file":"async.js","sources":["../../../../../src/mods/storages/idb/async.ts"],"sourcesContent":["import { State } from \"mods/types/state.js\"\nimport { AsyncStorage } from \"mods/types/storage.js\"\nimport { useEffect, useRef } from \"react\"\n\nexport function useIDBStorage(name: string) {\n  const storage = useRef<IDBStorage>()\n\n  if (storage.current === undefined)\n    storage.current = new IDBStorage(name)\n\n  useEffect(() => () => {\n    storage.current?.unmount()\n  }, [])\n\n  return storage.current\n}\n\nexport class IDBStorage implements AsyncStorage {\n  readonly async = true\n  readonly initialization?: Promise<void>\n  readonly keys = new Set<string>()\n  readonly onunload?: () => void\n\n  _database?: IDBDatabase\n\n  constructor(readonly name: string) {\n    if (typeof indexedDB === \"undefined\")\n      return\n    this.initialization = this.load()\n    this.onunload = () => this.unload()\n    addEventListener(\"beforeunload\", this.onunload)\n  }\n\n  get database() { return this._database }\n\n  private async load() {\n    if (typeof indexedDB === \"undefined\")\n      return\n    this._database = await new Promise<IDBDatabase>((ok, err) => {\n      const req = indexedDB.open(this.name, 1)\n      req.onupgradeneeded = () =>\n        req.result.createObjectStore(\"keyval\", {})\n      req.onblocked = () => err(\"blocked\")\n      req.onsuccess = () => ok(req.result)\n      req.onerror = () => err(req.error)\n    })\n\n    if (typeof Storage === \"undefined\")\n      return\n    const item = localStorage.getItem(`idb.${this.name}.keys`)\n    if (!item) return\n    const keys = JSON.parse(item) as string[]\n    keys.forEach(key => this.keys.add(key))\n    localStorage.removeItem(`idb.${this.name}.keys`)\n    await this.collect().catch(console.error)\n  }\n\n  unmount() {\n    if (typeof indexedDB === \"undefined\")\n      return\n    if (this.onunload !== undefined)\n      removeEventListener(\"beforeunload\", this.onunload)\n    this.collect().catch(console.error)\n  }\n\n  private unload() {\n    if (typeof Storage === \"undefined\")\n      return\n    const item = JSON.stringify([...this.keys])\n    localStorage.setItem(`idb.${this.name}.keys`, item)\n  }\n\n  async collect() {\n    if (typeof indexedDB === \"undefined\")\n      return\n    for (const key of this.keys) {\n      const state = await this.get<State>(key, true)\n      if (state?.expiration === undefined) continue\n      if (state.expiration > Date.now()) continue\n      this.delete(key, false)\n    }\n  }\n\n  async transact<T>(callback: (store: IDBObjectStore) => Promise<T>, mode: IDBTransactionMode) {\n    if (typeof indexedDB === \"undefined\")\n      return\n    if (this.database === undefined)\n      await this.initialization\n\n    return await new Promise<T>((ok, err) => {\n      if (this.database === undefined)\n        throw new Error(\"Undefined database\")\n      const tx = this.database.transaction(\"keyval\", mode)\n      tx.onerror = () => err(tx.error)\n      tx.oncomplete = () => ok(result)\n\n      let result: T;\n\n      callback(tx.objectStore(\"keyval\"))\n        .then(x => result = x)\n        .then(() => tx.commit())\n        .catch(err)\n    })\n  }\n\n  async get<T = any>(key: string, ignore = false) {\n    if (typeof indexedDB === \"undefined\")\n      return\n    if (!ignore && !this.keys.has(key))\n      this.keys.add(key)\n    return await this.transact(async (store) => {\n      return await new Promise<T>((ok, err) => {\n        const req = store.get(key)\n        req.onerror = () => err(req.error)\n        req.onsuccess = () => ok(req.result)\n      })\n    }, \"readonly\")\n  }\n\n  async set<T = any>(key: string, value: T, ignore = false) {\n    if (typeof indexedDB === \"undefined\")\n      return\n    if (!ignore && !this.keys.has(key))\n      this.keys.add(key)\n    return await this.transact(async (store) => {\n      return await new Promise<void>((ok, err) => {\n        const req = store.put(value, key)\n        req.onerror = () => err(req.error)\n        req.onsuccess = () => ok()\n      })\n    }, \"readwrite\")\n  }\n\n  async delete(key: string, ignore = false) {\n    if (typeof indexedDB === \"undefined\")\n      return\n    if (!ignore && this.keys.has(key))\n      this.keys.delete(key)\n    return await this.transact(async (store) => {\n      return await new Promise<void>((ok, err) => {\n        const req = store.delete(key)\n        req.onerror = () => err(req.error)\n        req.onsuccess = () => ok()\n      })\n    }, \"readwrite\")\n  }\n}"],"names":["useRef","useEffect","__values","__awaiter"],"mappings":"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"}