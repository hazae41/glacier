'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('./mods/index.js');
var core = require('./mods/core.js');
var abort = require('./mods/errors/abort.js');
var core$1 = require('./mods/react/contexts/core.js');
var useDebug = require('./mods/react/hooks/blocks/use-debug.js');
var useError = require('./mods/react/hooks/blocks/use-error.js');
var useFallback = require('./mods/react/hooks/blocks/use-fallback.js');
var useFetch = require('./mods/react/hooks/blocks/use-fetch.js');
var useInterval = require('./mods/react/hooks/blocks/use-interval.js');
var useMount = require('./mods/react/hooks/blocks/use-mount.js');
var useOnce = require('./mods/react/hooks/blocks/use-once.js');
var useOnline = require('./mods/react/hooks/blocks/use-online.js');
var useRetry = require('./mods/react/hooks/blocks/use-retry.js');
var useVisible = require('./mods/react/hooks/blocks/use-visible.js');
var router = require('./mods/react/hooks/queries/router.js');
var scroll = require('./mods/react/hooks/queries/scroll.js');
var single = require('./mods/react/hooks/queries/single.js');
var xswr = require('./mods/react/hooks/xswr.js');
var helper = require('./mods/scroll/helper.js');
var object = require('./mods/scroll/object.js');
var schema = require('./mods/scroll/schema.js');
var helper$1 = require('./mods/single/helper.js');
var object$1 = require('./mods/single/object.js');
var schema$1 = require('./mods/single/schema.js');
var async = require('./mods/storages/idb/async.js');
var async$1 = require('./mods/storages/localStorage/async.js');
var sync = require('./mods/storages/localStorage/sync.js');
var storage = require('./mods/types/storage.js');
var defaults = require('./mods/utils/defaults.js');
var equals = require('./mods/utils/equals.js');



exports.XSWR = index;
exports.Core = core.Core;
exports.AbortError = abort.AbortError;
exports.isAbortError = abort.isAbortError;
exports.CoreContext = core$1.CoreContext;
exports.CoreProvider = core$1.CoreProvider;
exports.useCore = core$1.useCore;
exports.useCoreProvider = core$1.useCoreProvider;
exports.useDebug = useDebug.useDebug;
exports.useError = useError.useError;
exports.useFallback = useFallback.useFallback;
exports.useFetch = useFetch.useFetch;
exports.useInterval = useInterval.useInterval;
exports.useMount = useMount.useMount;
exports.useOnce = useOnce.useOnce;
exports.useOnline = useOnline.useOnline;
exports.useRetry = useRetry.useRetry;
exports.useVisible = useVisible.useVisible;
exports.useQuery = router.useQuery;
exports.useScrollQuery = scroll.useScrollQuery;
exports.useSingleQuery = single.useSingleQuery;
exports.useXSWR = xswr.useXSWR;
exports.ScrollHelper = helper.ScrollHelper;
exports.ScrollObject = object.ScrollObject;
exports.getScrollStorageKey = object.getScrollStorageKey;
exports.ScrollSchema = schema.ScrollSchema;
exports.getScrollSchema = schema.getScrollSchema;
exports.SingleHelper = helper$1.SingleHelper;
exports.SingleObject = object$1.SingleObject;
exports.getSingleStorageKey = object$1.getSingleStorageKey;
exports.SingleSchema = schema$1.SingleSchema;
exports.getSingleSchema = schema$1.getSingleSchema;
exports.IDBStorage = async.IDBStorage;
exports.useIDBStorage = async.useIDBStorage;
exports.AsyncLocalStorage = async$1.AsyncLocalStorage;
exports.useAsyncLocalStorage = async$1.useAsyncLocalStorage;
exports.SyncLocalStorage = sync.SyncLocalStorage;
exports.useSyncLocalStorage = sync.useSyncLocalStorage;
exports.isAsyncStorage = storage.isAsyncStorage;
exports.DEFAULT_COOLDOWN = defaults.DEFAULT_COOLDOWN;
exports.DEFAULT_EQUALS = defaults.DEFAULT_EQUALS;
exports.DEFAULT_EXPIRATION = defaults.DEFAULT_EXPIRATION;
exports.DEFAULT_SERIALIZER = defaults.DEFAULT_SERIALIZER;
exports.DEFAULT_TIMEOUT = defaults.DEFAULT_TIMEOUT;
exports.jsonEquals = equals.jsonEquals;
exports.refEquals = equals.refEquals;
exports.shallowEquals = equals.shallowEquals;
//# sourceMappingURL=index.js.map
